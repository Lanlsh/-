// Windows下多线程.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include <Windows.h>
#include <thread>
#include <iostream>
#include <mutex>

using namespace std;

static bool bIsReady = false;
std::mutex mt_ready;

void SetIsReady(bool bReady)
{
	bIsReady = bReady;	
}

int cReady = 0;
int pReay = 0;

bool GetIsReady()
{
	return cReady > 0;
}

void CheckCin()
{
	//生产者
	char buf[100] = {0};
	string s_buf = "";
	while (true)
	{
		cin.getline(buf, 100);
		s_buf = buf;
		if (s_buf == "q")
		{	
			mt_ready.lock();
			cReady++;
			mt_ready.unlock();
			cout <<"生产：  "<< "cReady: " << cReady << endl;
		}
		//std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	}
}

void ProcessExit()
{
	//消费者
	while (true)
	{
		mt_ready.lock();
		bool isReady = GetIsReady();
		mt_ready.unlock();

		if (isReady)
		{
			mt_ready.lock();
			cReady--;
			cout << "消费：  " << "cReady: " << cReady << endl;
			mt_ready.unlock();
		}
		else
		{
			std::this_thread::sleep_for(std::chrono::milliseconds(1000));
		}
	}
}


int _tmain(int argc, _TCHAR* argv[])
{
	std::thread td_1(&CheckCin);
	std::thread td_2(&ProcessExit);

	td_1.join();
	td_2.join();

	//system("pause");
	return 0;
}

